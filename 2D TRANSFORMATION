2D TRANSFORMATION: 
#include<stdio.h> 
#include<conio.h> 
#include<graphics.h> 
#include<dos.h> 
#include<math.h> 
void main() 
{ 
 int gd,gm,n,i; 
 float a[10][2],b[10][2],tx,ty,sx,sy,th,xp,yp,t; 
 printf("Enter number of vertices of polygon"); 
 scanf("%d",&n); 
 for(i=0;i<n;i++) 
 { 
 printf("Enter x coordinate"); 
 scanf("%f",&a[i][0]); 
 printf("Enter y coordinate"); 
 scanf("%f",&a[i][1]); 
 } 
 a[n][0]=a[0][0]; 
 a[n][1]=a[0][1]; 
 printf("Enter tx and ty for translation"); 
 scanf("%f%f",&tx,&ty); 
 printf("Enter sx and sy for scaling") ; 
 scanf("%f%f",&sx,&sy); 
 printf("Enter angle of rotation"); 
 scanf("%f",&th); 
 t=(th*3.14/180); 
 printf("Enter x and y coordinate of point of rotation"); 
 scanf("%f%f",&xp,&yp); 
 gd=DETECT; 
 initgraph(&gd,&gm,"c:\\turboc3\\bgi"); 
 for(i=0;i<n;i++) 
 line(a[i][0],a[i][1],a[i+1][0],a[i+1][1]); 
 for(i=0;i<=n;i++) 
 { 
 b[i][0]=a[i][0]+tx; 
 b[i][1]=a[i][1]+ty; 
 } 
 for(i=0;i<n;i++) 
 line(b[i][0],b[i][1],b[i+1][0],b[i+1][1]); 
 for(i=0;i<=n;i++) 
 { 
 b[i][0]=a[i][0]*sx; 
 b[i][1]=a[i][1]*sy; 
 } 
 for(i=0;i<n;i++) 
 line(b[i][0],b[i][1],b[i+1][0],b[i+1][1]); 
 for(i=0;i<=n;i++) 
 { 
 b[i][0]=a[i][0]*cos(t)-a[i][1]*sin(t); 
 b[i][1]=a[i][0]*sin(t)+a[i][1]*cos(t); 
 } 
 for(i=0;i<n;i++) 
 line(b[i][0],b[i][1],b[i+1][0],b[i+1][1]); 
 for(i=0;i<=n;i++) 
 { 
 b[i][0]=a[i][0]*cos(t)-a[i][1]*sin(t)-xp*cos(t)+yp*sin(t)+xp; 
 b[i][1]=a[i][0]*sin(t)+a[i][1]*cos(t)-xp*sin(t)-yp*cos(t)+yp; 
 } 
 for(i=0;i<n;i++) 
 line(b[i][0],b[i][1],b[i+1][0],b[i+1][1]); 
getch(); 
}
